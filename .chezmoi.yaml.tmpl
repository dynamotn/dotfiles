encryption: age
format: yaml
mode: symlink
{{- if stdinIsATTY }}
progress: true
{{- end }}

# Uncomment the following line to set umask for MacOS root system
# umask: 0o02

add:
  templateSymlinks: true

diff:
  pager: delta --pager="ov -F --section-delimiter '^(added:|removed:|renamed:|Δ)' --section-header --pattern '•'"

data:
  {{- $osid := .chezmoi.os }}
  {{- if hasKey .chezmoi.osRelease "id" }}
  {{-   $osid = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.id }}
  {{- end }}
  osid: {{ $osid }}
  {{- if eq $osid "android" }}
  initSystem: "termux"
  {{- else if eq $osid "darwin" }}
  initSystem: "launchd"
  {{- else if eq $osid "linux-gentoo" }}
  {{-   $initSystem := promptChoiceOnce . "initSystem" "What init system does this machine use?" (list "openrc" "systemd") "openrc" }}
  initSystem: {{ $initSystem | quote }}
  {{- else if eq $osid "linux-alpine" }}
  initSystem: "openrc"
  {{- else }}
  initSystem: "systemd"
  {{- end }}
  {{- if eq .chezmoi.os "android" }}
  bash: {{ lookPath "bash" }}
  {{- else }}
  bash: /usr/bin/env bash
  {{- end }}
  {{ $place := promptChoiceOnce . "place" "Where does this machine place?" (list "home" "office" "cloud") "cloud" }}
  place: {{ $place | quote }}
  {{ $kind := promptChoiceOnce . "kind" "What kind of this machine is it?"  (list "pc" "laptop" "workstation" "tablet" "vm" "sbc" "container") "container" }}
  kind: {{ $kind | quote }}
  code: {{ promptStringOnce . "code" "What is this machine's name?" "t00lb0x" | quote }}
  {{- if eq $place "office" }}
  company: {{ promptStringOnce . "company" "What code of owner company is?" | quote }}
  {{- else }}
  company:
  {{- end }}
  {{ $decryptPersonal := promptBoolOnce . "decryptPersonal" "Do you want to decrypt personal's secrets? (y/n)" false }}
  decryptPersonal: {{ $decryptPersonal }}
  {{ $decryptEnterprise := promptBool "Do you want to decrypt enterprise's secrets? (y/n)" false }}
  {{- $listDecryptEnterprise := list }}
  {{- if $decryptEnterprise }}
  decryptEnterprise:
    {{- range until 10 }}
    {{-   $company := promptString "Fill your company code to decrypt (empty to end this list)" }}
    {{-   if $company }}
    {{-     $listDecryptEnterprise = append $listDecryptEnterprise $company }}
    - {{ $company }}
    {{-   else }}
    {{-     break }}
    {{-   end }}
  {{-   end }}
  {{- else }}
  decryptEnterprise: []
  {{- end }}
  {{ $guiServer := promptChoiceOnce . "guiServer" "Which GUI server of this machine is? (W for Wayland, X for XOrg, M for Mac, 0 for CLI-only)" (list "W" "X" "M" "0") "0" }}
  guiServer: {{ $guiServer | quote }}
  {{- if ne $guiServer "0" }}
  guiDriver: {{ promptChoiceOnce . "guiDriver" "Which GUI video driver of this machine is? (N for Nvidia, I for Intel, A for AMD, M for Mac, V for virtual)" (list "N" "I" "A" "M" "V") | quote }}
  guiWinManager: {{ promptChoiceOnce . "guiWinManager" "Which GUI window manager of this machine is? (A for aerospace, H for hyprland, G for gnome)" (list "H" "A" "G") "H" | quote }}
  browser: {{ promptChoiceOnce . "browser" "What web browser do you use? (F for Firefox, Z for Zen Browser)" (list "F" "Z") "Z" | quote }}
  browserEnterpriseProfiles:
    {{- range $listDecryptEnterprise }}
    {{-   $hasProfile := promptBool (printf "Does %s company has a browser profile? (y/n)" .) false }}
    {{-   if $hasProfile }}
    - {{ . }}
    {{-   end }}
    {{- end }}
  mailClient: {{ promptChoiceOnce . "mailClient" "What email client do you use? (T for Thunderbird, B for Betterbird)" (list "T" "B") "B" | quote }}
  mailEnterpriseProfiles:
    {{- range $listDecryptEnterprise }}
    {{-   $hasProfile := promptBool (printf "Does %s company has a email profile? (y/n)" .) false }}
    {{-   if $hasProfile }}
    - {{ . }}
    {{-   end }}
    {{- end }}
  {{- else }}
  guiDriver:
  guiWinManager:
  browser:
  browserEnterpriseProfiles: []
  mailClient:
  mailEnterpriseProfiles: []
  {{- end }}
  terminalMultiplexer: {{ promptChoiceOnce . "terminalMultiplexer" "What terminal multiplexer do you use? (T for tmux, Z for Zellij)" (list "T" "Z") "Z" | quote }}
  {{- if ne .kind "container" }}
  hasSound: {{ promptBoolOnce . "hasSound" "Does this machine has a sound card? (y/n)" false }}
  hasBluetooth: {{ promptBoolOnce . "hasBluetooth" "Does this machine has a bluetooth device? (y/n)" false }}
  {{- else }}
  hasSound: false
  hasBluetooth: false
  {{- end }}
  {{ $hasProxy := promptBool "Does this machine need HTTP(S) or SOCKS proxy? (y/n)" false }}
  {{- if $hasProxy }}
  httpProxy: {{ promptStringOnce . "httpProxy" "Fill HTTP(S) proxy address, empty for not using:" | quote }}
  socksProxy: {{ promptStringOnce . "socksProxy" "Fill SOCKS proxy address, empty for not using:" | quote }}
  noProxyAddresses:
    {{- range until 100 }}
    {{-   $address := promptString "Fill address that not use proxy (empty to end this list)" }}
    {{-  if $address }}
    - {{ $address }}
    {{-  else }}
    {{-    break }}
    {{-  end }}
    {{- end }}
  {{- else }}
  httpProxy:
  socksProxy:
  noProxyAddresses: []
  {{- end }}
  preferGitSSH: {{ promptBoolOnce . "preferGitSSH" "Do you want to prefer SSH than HTTPS for git? (y/n)" false }}
  blockedGitlab: {{ promptBoolOnce . "blockedGitlab" "Is this machines blocked to access Gitlab? (y/n)" false }}

age:
  identities:
    {{ if $decryptPersonal }}
    - {{ .chezmoi.homeDir }}/.config/chezmoi/personal.key
    {{- end }}
    {{ if $decryptEnterprise }}
    {{-  range $listDecryptEnterprise }}
    - {{ $.chezmoi.homeDir }}/.config/chezmoi/enterprise-{{ . }}.key
    {{-  end }}
    {{- end }}
  recipients:
    {{ if $decryptPersonal }}
    - age1fzajmt2yy4naas2wtcn3v2vjea3f5rgvmz2elp02zvvmdtcgwcdsqxnd5a
    {{- end }}
    {{- if $decryptEnterprise }}
    {{-   range $listDecryptEnterprise }}
    {{      if eq . "F1" -}}
    - age1t7nuzf3ys4890tn8frjk2mtalkhy3kyr0dqeajk7pn6fjnag6fys85fm39
    {{      else if eq . "ZOO" -}}
    - age1xudykg8zjf4llnzlhre8jducx3sz02fu6p46v8gp05psvkrhvamqq658aa
    {{      else if eq . "T1" -}}
    - age1ghq8xs3k044utwa4kwspupmfx0u4n67qfjnpvnerf2hfd0gyt4eqxhq6xz
    {{-     end }}
    {{-   end }}
    {{- end }}
