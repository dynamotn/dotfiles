encryption: age
format: yaml
mode: symlink
{{- if stdinIsATTY }}
progress: true
{{- end }}

add:
  templateSymlinks: true

age:
  identity: {{ .chezmoi.homeDir }}/.config/chezmoi/key
  recipient: age1fzajmt2yy4naas2wtcn3v2vjea3f5rgvmz2elp02zvvmdtcgwcdsqxnd5a

diff:
  pager: delta --pager="ov -F --section-delimiter '^(added:|removed:|renamed:|Δ)' --section-header --pattern '•'"

data:
  {{- $osid := .chezmoi.os }}
  {{- if hasKey .chezmoi.osRelease "id" }}
  {{- $osid = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.id }}
  {{- end }}
  osid: {{ $osid }}
  {{ $place := promptChoiceOnce . "place" "Where does this machine place?" (list "home" "office" "cloud") "cloud" | quote }}
  place: {{ $place }}
  {{ $kind := promptChoiceOnce . "kind" "What kind of this machine is it?"  (list "pc" "laptop" "workstation" "tablet" "vm" "sbc" "container") "container" | quote }}
  kind: {{ $kind }}
  {{- if eq $kind "sbc" "vm" "workstation" }}
  code: {{ promptStringOnce . "code" "What is this machine's name?" | quote }}
  {{- else }}
  code:
  {{- end }}
  {{- if eq $place "office" }}
  company: {{ promptStringOnce . "company" "What code of owner company is?" | quote }}
  {{- else }}
  company:
  {{- end }}
  {{ $guiServer := promptChoiceOnce . "guiServer" "Which GUI server of this machine is? (W for Wayland, X for XOrg, M for Mac, 0 for CLI-only)" (list "W" "X" "M" "0") "0" }}
  guiServer: {{ $guiServer | quote }}
  {{- if ne $guiServer "0" }}
  guiDriver: {{ promptChoiceOnce . "guiDriver" "Which GUI video driver of this machine is? (N for Nvidia, I for Intel, A for AMD, M for Mac)" (list "N" "I" "A" "M") | quote }}
  guiWinManager: {{ promptChoiceOnce . "guiWinManager" "Which GUI window manager of this machine is? (A for aerospace, H for hyprland, G for gnome)" (list "H" "A" "G") "H" | quote }}
  browser: {{ promptChoiceOnce . "browser" "What browser do you use? (F for Firefox, Z for Zen Browser)" (list "F" "Z") "Z" | quote }}
  {{- else }}
  guiDriver:
  guiWinManager:
  browser:
  {{- end }}
  hasSound: {{ promptBoolOnce . "hasSound" "Does this machine has a sound card? (y/n)" false }}
  hasBluetooth: {{ promptBoolOnce . "hasBluetooth" "Does this machine has a bluetooth device? (y/n)" false }}
  terminalMultiplexer: {{ promptChoiceOnce . "terminalMultiplexer" "What terminal multiplexer do you use? (T for tmux, Z for Zellij)" (list "T" "Z") "Z" | quote }}

hooks:
  diff:
    pre:
      command: "bash"
      args:
        - -c
        # HACK: run bash again to avoid the error
        - bash {{ .chezmoi.homeDir }}/.config/chezmoi/hooks/diff/pre.sh
