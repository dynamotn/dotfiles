#!{{ .bash }}
source {{ .chezmoi.sourceDir }}/../scripts/lib/dybatpho/init.sh
dybatpho::register_err_handler

{{- if .browser }}
{{-   $process := "" }}
{{-   $appName := "" }}
{{-   if eq .browser "F" }}
{{-     $appName = "firefox" }}
{{-     if eq .chezmoi.os "darwin" }}
{{-       $process = "/Applications/Firefox.app/Contents/MacOS/firefox" }}
{{-     else if eq .osid "linux-gentoo" }}
{{-       $process = "/usr/lib64/firefox" }}
{{-     else }}
{{-       $process = "/usr/lib/firefox" }}
{{-     end }}
{{-   else if eq .browser "Z" }}
{{-     $appName = "zen" }}
{{-     if eq .chezmoi.os "darwin" }}
{{-       $process = "/Applications/Zen.app/Contents/MacOS/zen" }}
{{-     else if eq .osid "linux-gentoo" }}
{{-       $process = "/opt/zen-browser/zen" }}
{{-     else }}
{{-       $process = "/opt/zen-browser-bin/zen" }}
{{-     end }}
{{-   end }}
{{-   $profiles := list "public" }}
{{-   if .decryptPersonal }}
{{-     $profiles = append $profiles "personal" }}
{{-   end }}
{{-   range .decryptEnterprise }}
{{-     $profiles = append $profiles (printf "enterprise-%s" .) }}
{{-   end }}

function _update_dotfiles {
  for profile in {{ range $profiles }}{{ . | quote }} {{ end }}; do
    if [ "$PROFILE" = "" ] || [ "$PROFILE" = "$profile" ]; then
      if dybatpho::is file ~/.config/firefox/profiles/${profile}/prefs.js; then
        dybatpho::progress "Update toolbar setting for profile ${profile}"
        grep "browser.uiCustomization.state" ~/.config/firefox/profiles/${profile}/prefs.js > {{ .chezmoi.sourceDir }}/.chezmoitemplates/firefox/prefs/${profile}/01-toolbar.js

        dybatpho::progress "Update addon setting for profile ${profile}"
        grep "extensions.webextensions.uuids" ~/.config/firefox/profiles/${profile}/prefs.js > {{ .chezmoi.sourceDir }}/.chezmoitemplates/firefox/prefs/${profile}/02-extensions.js || true
        grep "extensions.webextensions.ExtensionStorageIDB.migrated" ~/.config/firefox/profiles/${profile}/prefs.js >> {{ .chezmoi.sourceDir }}/.chezmoitemplates/firefox/prefs/${profile}/02-extensions.js || true
        grep "privacy.userContext.extension" ~/.config/firefox/profiles/${profile}/prefs.js >> {{ .chezmoi.sourceDir }}/.chezmoitemplates/firefox/prefs/${profile}/02-extensions.js || true
      fi

      dybatpho::progress "Update extensions data for profile ${profile}"
      chezmoi add ~/.config/firefox/profiles/${profile}/extensions || true
      chezmoi add ~/.config/firefox/profiles/${profile}/addons.json --create || true
      chezmoi add ~/.config/firefox/profiles/${profile}/addonStartup.json.lz4 --create || true
      chezmoi add ~/.config/firefox/profiles/${profile}/extension*.json --create || true

      dybatpho::progress "Update search engines for profile ${profile}"
      chezmoi add ~/.config/firefox/profiles/${profile}/search.json.mozlz4 --create || true

      dybatpho::progress "Update bookmarks, history and workspaces for profile ${profile}"
      chezmoi add ~/.config/firefox/profiles/${profile}/favicons.sqlite --create || true
      chezmoi add ~/.config/firefox/profiles/${profile}/places.sqlite --create || true

      dybatpho::progress "Update storage data for profile ${profile}"
      chezmoi add ~/.config/firefox/profiles/${profile}/storage.sqlite --create || true
      chezmoi add ~/.config/firefox/profiles/${profile}/storage/default/moz-extension+++* --create || true
    else
      dybatpho::debug "$PROFILE"
    fi
  done
}

function _main {
  dybatpho::info "Your browser in chezmoi settings is {{ $appName }}"
  if [ "$(pgrep -f {{ $process }} | wc -l)" -gt 1 ]; then
    dybatpho::fatal "{{ $appName }} is running"
  else
    dybatpho::notice "Update {{ $appName }} settings"
    _update_dotfiles
    dybatpho::success "Update {{ $appName }} settings"
  fi
}

function _spec_main {
  dybatpho::opts::setup "Update your live data of {{ $appName }} browser to your dotfiles" MAIN_ARGS action:"_main"
  dybatpho::opts::param "Log level" LOG_LEVEL --log-level -l init:="info" validate:"dybatpho::validate_log_level \$OPTARG"
  dybatpho::opts::param "Profile name" PROFILE --profile -p validate:"_validate_profile"
  dybatpho::opts::disp "Show help" --help action:"dybatpho::generate_help _spec_main"
}

function _validate_profile {
  for profile in {{ range $profiles }}{{ . | quote }} {{ end }}; do
    if [ "$OPTARG" = "" ] || [ "$OPTARG" = "$profile" ]; then
      return 0
    fi
  done
  dybatpho::error "Profile must be one of this list: {{ range $profiles }}'{{ . }}' {{ end }}"
  return 1
}

dybatpho::generate_from_spec _spec_main "$@"
{{- end }}
