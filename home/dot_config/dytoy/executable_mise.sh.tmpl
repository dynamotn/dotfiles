#!/usr/bin/env bash
source {{ .chezmoi.sourceDir }}/../scripts/lib/dybatpho/init.sh
dybatpho::register_err_handler

SCRIPT_DIR=$(dirname "$(readlink -f "$0")")

_usage() {
  echo "$0 usage:" && grep -E " \w) #" "$0" | sed -e 's/\(.\)) #/-\1/g'
  exit 0
}

_parse_args() {
  while getopts ":het:" arg; do
    case $arg in
      e) # Update only essential tool
        FLAG_IS_ESSENTIAL=true
        ;;
      t) # Only one specific tool
        TOOL=$OPTARG
        ;;
      h) # Display help
        _usage
        ;;
      *) ;;
    esac
  done
}

_main() {
  if ! command -v mise 2>&1 >/dev/null; then
    "$SCRIPT_DIR/binary.sh" -t mise
    mise trust
  fi
  if [ "$TOOL" = "" ]; then
    dybatpho::info "Install mise tools"
  else
    dybatpho::info "Install mise tool: $TOOL"
  fi
  readarray mise_tools < <(yq e -o=j -I=0 'filter(.method == "mise") | .[]' ~/.config/dytoy/tools.yaml )

  for tool in "${mise_tools[@]}"; do
    tool_name=$(echo "$tool" | yq e '.name')
    if [ "$TOOL" != "" ] && [ "$TOOL" != "$tool_name" ]; then
      continue
    fi
    is_essential=$(echo "$tool" | yq e '.is_essential')
    if [ "$FLAG_IS_ESSENTIAL" = true ] && [ "$is_essential" != "true" ]; then
      continue
    fi

    readarray dependencies < <(echo "$tool" | yq e -o=j -I=0 -r '.dependencies.[]')
    for dependency in "${dependencies[@]}"; do
      dependency=${dependency%$'\n'}
      method=$(yq e -o=j -I=0 'filter(.name == "'"$dependency"'") | .[].method | .' ~/.config/dytoy/tools.yaml)
      method=${method%\"}
      method=${method#\"}
      "$SCRIPT_DIR/$method.sh" -t "$dependency"
    done

    backend=$(echo "$tool" | yq e '.backend')
    if [[ "$backend" = "null" ]]; then
      backend=${tool_name}
    fi

    version=$(echo "$tool" | yq e '.version')
    {{- $command := "mise" }}
    {{- if eq .chezmoi.os "android" }}
    {{- $command = "proot -b $PREFIX/etc/resolv.conf:/etc/resolv.conf mise" }}
    {{- end }}

    if [[ "$version" = "null" ]]; then
      {{ $command }} use -g ${backend}@latest
    elif [[ "$version" = "system" ]]; then
      {{ $command }} use -g ${backend}@system
    else
      {{ $command }} use -g ${backend}@${version}
    fi
  done

  dybatpho::success "Installed mise tools"
}

TOOL=
FLAG_IS_ESSENTIAL=false
_parse_args "$@"

_main
