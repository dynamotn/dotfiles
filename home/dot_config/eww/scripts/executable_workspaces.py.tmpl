#!/usr/bin/env python

import json
import os
import subprocess
import sys

SIGNATURE = os.environ.get("HYPRLAND_INSTANCE_SIGNATURE")
USER = subprocess.check_output(["id", "-u"]).decode("utf-8").strip()
WORKSPACE_NAMES = [
    "TERM",
    "WEB",
    "MAIL",
    "DOC",
    "CHAT",
    "M&V",
    "GAME",
    "SYS",
    "MISC",
    "SEC",
]

def get_workspaces():
    workspaces = subprocess.check_output(["hyprctl", "workspaces", "-j"])
    return json.loads(workspaces)

def get_monitors():
    active = subprocess.check_output(["hyprctl", "monitors", "-j"])
    return json.loads(active)

def get_active_workspace(monitor):
    return monitor['activeWorkspace']['id']

def get_workspace_datas(monitor):
    WORKSPACES = get_workspaces()
    workspace_data_dict = {item["id"]: item["windows"] for item in WORKSPACES}
    monitor_id = int(monitor["id"])
    workspace_ids = range(1 + monitor_id * 10, 10 + 1 + monitor_id * 10)
    workspaces_data = [{"id": ws, "windows": workspace_data_dict.get(ws, 0), "name": WORKSPACE_NAMES[ws - monitor_id * 10 - 1]} for ws in workspace_ids]
    return workspaces_data

def monitor_socat_output():
    {{- if eq .chezmoi.osRelease.id "gentoo" }}
    socat_command = ["nc", "-U", f"/tmp/user-{USER}/hypr/{SIGNATURE}/.socket2.sock"]
    {{- else }}
    socat_command = ["nc", "-U", f"/run/user/{USER}/hypr/{SIGNATURE}/.socket2.sock"]
    {{- end }}
    with subprocess.Popen(socat_command, stdout=subprocess.PIPE, text=True) as process:
        for line in process.stdout:
            show_result()

def show_result():
    result = []
    for monitor in get_monitors():
        result.append({
            "all": get_workspace_datas(monitor),
            "active": get_active_workspace(monitor),
        })
    sys.stdout.write(json.dumps(result) + "\n")
    sys.stdout.flush()

if __name__ == "__main__":
    show_result()
    monitor_socat_output()
