#!{{ .bash }}
source {{ .chezmoi.sourceDir }}/../scripts/lib/dybatpho/init.sh
dybatpho::register_err_handler

{{ $types := list }}
{{- if .decryptPersonal }}
{{-   $types = append $types "personal" }}
# personal hash: {{ joinPath .chezmoi.sourceDir "../secrets/personal.age" | include | sha256sum }}
{{- end }}
{{- range .decryptEnterprise }}
{{-   $types = printf "enterprise-%s" . | append $types }}
# {{ . }} hash: {{ printf "../secrets/enterprise-%s.age" . | joinPath $.chezmoi.sourceDir | include | sha256sum }}
{{- end }}
for type in {{ range $types }}{{ . | quote }} {{ end }}; do
  dybatpho::notice "Decrypting ${type}.age file to decrypt all encrypted files"
  if ! dybatpho::is file "${HOME}/.config/chezmoi/${type}.key"; then
    {{- if eq .kind "container" }}
    {{ .chezmoi.sourceDir }}/../scripts/expect-age "${AGE_PASSPHRASE}" "{{ .chezmoi.sourceDir }}/../secrets/${type}.age" "${HOME}/.config/chezmoi/${type}.key"
    {{- else }}
    age --decrypt --output "${HOME}/.config/chezmoi/${type}.key" "{{ .chezmoi.sourceDir }}/../secrets/${type}.age"
    {{- end }}

    if [ $? -eq 0 ]; then
      chmod 400 "${HOME}/.config/chezmoi/${type}.key"
      dybatpho::success "Successfully decrypted ${type}.age file"
    else
      dybatpho::error "Failed to decrypt ${type}.age file"
    fi
  else
    dybatpho::info "Not need to decrypt ${type}.age file"
  fi
done
